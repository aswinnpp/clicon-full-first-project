<%- include('../partials/admin/header') %>




<style>
  .custom-btn {
    padding: 8px 24px;
    font-weight: 500;
    min-width: 120px;
  }

  .custom-btn.active {
    background-color: #0d6efd;
    color: white;
    border-color: #0d6efd;
  }

  .card {
    width: 100%;
  }

  .card-header {
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  }

  .btn-group .btn i {
    margin-right: 5px;
  }

  .table {
    margin-top: 20px;
    font-size: 0.9rem;
  }

  .table th, .table td {
    padding: 12px;
    text-align: center;
  }

  .table-striped tbody tr:nth-of-type(odd) {
    background-color: #f2f2f2;
  }

  .table-bordered {
    border: 1px solid #ddd;
  }

  .table-bordered th, .table-bordered td {
    border: 1px solid #ddd;
  }

  .table thead th {
    background-color: #f8f9fa;
    color: #495057;
  }

  .table thead th, .table-bordered td, .table-bordered th {
    vertical-align: middle;
  }

  .table-striped tbody tr:hover {
    background-color: #e9ecef;
  }

  @media (max-width: 768px) {
    .d-flex.justify-content-center {
      flex-direction: column;
      align-items: center;
    }
    .btn-group {
      margin-bottom: 1rem;
    }
    .btn-group:last-child {
      margin-bottom: 0;
    }
  }

  /* Add these styles for PDF export */
  @media print {
    table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 20px;
    }
    
    th, td {
      border: 1px solid #ddd;
      padding: 8px;
      text-align: center;
    }
    
    th {
      background-color: #f8f9fa;
      font-weight: bold;
    }
    
    tr:nth-child(even) {
      background-color: #f9f9f9;
    }
  }

  /* PDF-specific styles */
  .pdf-wrapper {
    padding: 20px;
    width: 100%;
  }

  .pdf-table {
    width: 100%;
    border-collapse: collapse;
    table-layout: fixed;
  }

  .pdf-table th,
  .pdf-table td {
    border: 1px solid #000;
    padding: 8px;
    text-align: center;
    word-wrap: break-word;
    width: 20%; /* Equal width for all columns */
  }

  .pdf-table th {
    background-color: #f8f9fa !important;
    color: #000;
    font-weight: bold;
  }

  @media print {
    .pdf-wrapper {
      width: 100%;
      margin: 0;
      padding: 10px;
    }

    .pdf-table {
      width: 100%;
      margin: 0;
      border: 1px solid #000;
    }

    .pdf-table th,
    .pdf-table td {
      padding: 8px;
      border: 1px solid #000;
      text-align: center;
      width: 20%; /* Equal width for all columns */
    }

    .pdf-table th {
      background-color: #f8f9fa !important;
      -webkit-print-color-adjust: exact;
      print-color-adjust: exact;
    }

    /* Force background colors in PDF */
    * {
      -webkit-print-color-adjust: exact !important;
      print-color-adjust: exact !important;
    }
  }
</style>
   
<div class="container-fluid">
  <div class="row">
    <button
      class="btn btn-dark d-md-none"
      onclick="toggleSidebar()"
      style="position: fixed; z-index: 1050"
    >
      <i class="bi bi-list"></i>
    </button>

    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
      <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Dashboard</h1>
      </div>

    <!-- Dynamic Dashboard Widgets -->
    <div class="row">
      <div class="col-md-3 mb-4">
        <div class="card text-white bg-primary">
          <div class="card-body">
            <h5 class="card-title">Users</h5>
            <p class="card-text">Total Users: <%= totalUsers %></p>
          </div>
        </div>
      </div>
      <div class="col-md-3 mb-4">
        <div class="card text-white bg-success">
          <div class="card-body">
            <h5 class="card-title">Orders</h5>
            <p class="card-text">Completed Orders: <%=totalOrders %></p>
          </div>
        </div>
      </div>
      <div class="col-md-3 mb-4">
        <div class="card text-white bg-warning">
          <div class="card-body">
            <h5 class="card-title">Revenue</h5>
            <p class="card-text">Revenue: <%=Math.floor( totalRevenue) %></p>
          </div>
        </div>
      </div>
    </div>

      <!-- Sales Report Section -->
      <h4 class="mt-4 text-center">Sales Report</h4>

      <!-- Report Type Buttons -->
      <div class="text-center mb-4">
        <div class="btn-group mb-3" role="group" aria-label="Sales report period">
          <button type="button" class="btn btn-outline-primary custom-btn" onclick="showReport('daily')">Daily</button>
          <button type="button" class="btn btn-outline-primary custom-btn" onclick="showReport('weekly')">Weekly</button>
          <button type="button" class="btn btn-outline-primary custom-btn" onclick="showReport('monthly')">Monthly</button>
          <button type="button" class="btn btn-outline-primary custom-btn" onclick="showReport('yearly')">Yearly</button>
        </div>
        <div class="d-block">
          <div class="btn-group" role="group" aria-label="Download reports">
            <button type="button" class="btn btn-success custom-btn" onclick="exportToExcel()">
              <i class="bi bi-file-earmark-excel"></i> Excel
            </button>
            <button type="button" class="btn btn-danger custom-btn" onclick="exportCurrentTableToPDF()">
              <i class="bi bi-file-earmark-pdf"></i> PDF
            </button>
          </div>
        </div>
      </div>

     <!-- Daily Sales Report -->
<div id="daily-report" style="display:none;">
  <section class="sales">
    <h2>Daily Sales</h2>
    <table class="table table-striped table-bordered">
      <thead>
        <tr>
          <th>Date</th>
          <th>Total Orders</th>
          <th>Total Revenue</th>
          <th>Total Coupon Discount</th>
          <th>Total Product Discount</th>
        </tr>
      </thead>
      <tbody>
        <% dailySales?.forEach(sale => { %>
          <tr>
            <td><%= sale.date %></td>
            <td><%= sale.totalOrders %></td>
            <td><%= sale.totalRevenue.toFixed(2) %></td>
            <td><%= sale.totalCouponDiscount.toFixed(2) %></td>
            <td><%= sale.totalProductDiscount.toFixed(2) %></td>
          </tr>
        <% }) %>
      </tbody>
    </table>

    <div>

      <% if (currentPage.daily ) { %>
        <a href="?page=<%= currentPage.daily - 1 %>&limit=10&type=daily">Previous</a>
      <% } %>
      <span>Page<%= totalPages.daily %> of <%= totalPages.daily %></span>
      <% if (currentPage.daily < totalPages.daily) { %>
        <a href="?page=<%= currentPage.daily + 1 %>&limit=10&type=daily">Next</a>
      <% } %>
    </div>

  </section>
  
 
</div>

<!-- Weekly Sales Report -->
<div id="weekly-report" style="display:none;">
  <section class="sales">
    <h2>Weekly Sales</h2>
    <table class="table table-striped table-bordered">
      <thead>
        <tr>
          <th>Period</th>
          <th>Total Orders</th>
          <th>Total Revenue</th>
          <th>Total Coupon Discount</th>
          <th>Total Product Discount</th>
        </tr>
      </thead>
      <tbody>
        <% weeklySales?.forEach(sale => { %>
          <tr>
            <td><%= sale.startDate %> to <%= sale.endDate %></td>
            <td><%= sale.totalOrders %></td>
            <td><%= sale.totalRevenue.toFixed(2) %></td>
            <td><%= sale.totalCouponDiscount.toFixed(2) %></td>
            <td><%= sale.totalProductDiscount.toFixed(2) %></td>
          </tr>
        <% }) %>
      </tbody>
    </table>

    <!-- Weekly Sales Pagination -->
    <div>
      <% if (currentPage.weekly > 1) { %>
        <a href="?page=<%= currentPage.weekly - 1 %>&limit=10&type=weekly">Previous</a>
      <% } %>
      <span>Page <%= currentPage.weekly %> of <%= totalPages.weekly %></span>
      <% if (currentPage.weekly < totalPages.weekly) { %>
        <a href="?page=<%= currentPage.weekly + 1 %>&limit=10&type=weekly">Next</a>
      <% } %>
    </div>
  </section>
</div>

<!-- Monthly Sales Report -->
<div id="monthly-report" style="display:none;">
  <section class="sales">
    <h2>Monthly Sales</h2>
    <table class="table table-striped table-bordered"  id="salestable">
      <thead>
        <tr>
          <th>Month</th>
          <th>Total Orders</th>
          <th>Total Revenue</th>
          <th>Total Coupon Discount</th>
          <th>Total Product Discount</th>
        </tr>
      </thead>
      <tbody>
        <% monthlySales?.forEach(sale => { %>
          <tr>
            <td><%= new Date(sale.year, sale.month - 1).toLocaleString('default', { month: 'long' }) %></td>
            <td><%= sale.totalOrders %></td>
            <td><%= sale.totalRevenue.toFixed(2) %></td>
            <td><%= sale.totalCouponDiscount.toFixed(2) %></td>
            <td><%= sale.totalProductDiscount.toFixed(2) %></td>
          </tr>
        <% }) %>
      </tbody>
    </table>

    <!-- Monthly Sales Pagination -->
    <div>
      <% if (currentPage.monthly > 1) { %>
        <a href="?page=<%= currentPage.monthly - 1 %>&limit=10&type=monthly">Previous</a>
      <% } %>
      <span>Page <%= currentPage.monthly %> of <%= totalPages.monthly %></span>
      <% if (currentPage.monthly < totalPages.monthly) { %>
        <a href="?page=<%= currentPage.monthly + 1 %>&limit=10&type=monthly">Next</a>
      <% } %>
    </div>
  </section>
</div>

<!-- Yearly Sales Report -->
<div id="yearly-report" style="display:none;">
  <section class="sales">
    <h2>Yearly Sales</h2>
    <table class="table table-striped table-bordered">
      <thead>
        <tr>
          <th>Year</th>
          <th>Total Orders</th>
          <th>Total Revenue</th>
          <th>Total Coupon Discount</th>
          <th>Total Product Discount</th>
        </tr>
      </thead>
      <tbody>
        <% yearlySales?.forEach(sale => { %>
          <tr>
            <td><%= sale.year %></td>
            <td><%= sale.totalOrders %></td>
            <td><%= sale.totalRevenue.toFixed(2) %></td>
            <td><%= sale.totalCouponDiscount.toFixed(2) %></td>
            <td><%= sale.totalProductDiscount.toFixed(2) %></td>
          </tr>
        <% }) %>
      </tbody>
    </table>
    
    <div></div>
    <!-- Yearly Sales Pagination -->
    <div>
      <% if (currentPage.yearly > 1) { %>
        <a href="?page=<%= currentPage.yearly - 1 %>&limit=10&type=yearly">Previous</a>
      <% } %>
      <span>Page <%= currentPage.yearly %> of <%= totalPages.yearly %></span>
      <% if (currentPage.yearly < totalPages.yearly) { %>
        <a href="?page=<%= currentPage.yearly + 1 %>&limit=10&type=yearly">Next</a>
      <% } %>
    </div>
  </section>
</div>



      <script>



        let selectedReportType = "daily";
        function showReport(type) {
          selectedReportType = type;

          document.getElementById("daily-report").style.display = "none";
          document.getElementById("weekly-report").style.display = "none";
          document.getElementById("monthly-report").style.display = "none";
          document.getElementById("yearly-report").style.display = "none";

          const selectedReport = document.getElementById(`${type}-report`);
          if (selectedReport) {
            selectedReport.style.display = "block";
          } else {
            console.error(`Element with ID '${type}-report' not found.`);
          }

          const buttons = document.querySelectorAll(".btn-group .btn");
          buttons.forEach((button) => {
            button.classList.remove("active");
            if (button.textContent.toLowerCase().includes(type.toLowerCase())) {
              button.classList.add("active");
            }
          });
        }

     

        document.addEventListener("DOMContentLoaded", function () {
          showReport("daily");
        });
    

    function exportCurrentTableToPDF() {
      const currentReport = document.getElementById(`${selectedReportType}-report`);
      if (!currentReport) {
        console.error('Current report not found');
        return;
      }

     
      const tableElement = currentReport.querySelector('table').cloneNode(true);
      const title = currentReport.querySelector('h2').textContent;
      
     
      const wrapper = document.createElement('div');
      wrapper.className = 'pdf-wrapper';
 
      const titleElement = document.createElement('h2');
      titleElement.textContent = title;
      titleElement.style.textAlign = 'center';
      titleElement.style.marginBottom = '20px';
      wrapper.appendChild(titleElement);
      
     
      tableElement.className = 'pdf-table';
      wrapper.appendChild(tableElement);

      const opt = {
        margin: [0.5, 0.5, 0.5, 0.5], 
        filename: `${selectedReportType}-sales-report.pdf`,
        image: { type: 'jpeg', quality: 0.98 },
        html2canvas: { 
          scale: 2,
          logging: true,
          letterRendering: true
        },
        jsPDF: { 
          unit: 'in', 
          format: 'a4', 
          orientation: 'landscape',
          compress: true
        }
      };

    
      html2pdf().set(opt).from(wrapper).save();
    }

   
    function exportToExcel() {
      const currentReport = document.getElementById(`${selectedReportType}-report`);
      if (!currentReport) {
        console.error('Current report not found');
        return;
      }

     
      const title = currentReport.querySelector('h2').textContent;
      
    
      const table = currentReport.querySelector('table');
      const rows = table.querySelectorAll('tr');
    
      const wb = XLSX.utils.book_new();
      const ws_data = [];

      
      ws_data.push([title]); 
      ws_data.push([]); 

      
      rows.forEach(row => {
        const rowData = [];
        row.querySelectorAll('th, td').forEach(cell => {
          rowData.push(cell.textContent.trim());
        });
        ws_data.push(rowData);
      });

      const ws = XLSX.utils.aoa_to_sheet(ws_data);

    
      const headerStyle = {
        font: { bold: true, color: { rgb: "FFFFFF" } },
        fill: { fgColor: { rgb: "4472C4" } },
        alignment: { horizontal: "center", vertical: "center" }
      };

      const titleStyle = {
        font: { bold: true, sz: 14 },
        alignment: { horizontal: "center" }
      };

      const dataStyle = {
        alignment: { horizontal: "center" },
        border: {
          top: { style: "thin" },
          bottom: { style: "thin" },
          left: { style: "thin" },
          right: { style: "thin" }
        }
      };

      
      ws['!merges'] = [{ s: { r: 0, c: 0 }, e: { r: 0, c: 4 } }];
      
     
      const colWidths = [];
      ws_data[2].forEach((header, idx) => {
        const width = Math.max(
          header.length,
          ...ws_data.slice(3).map(row => String(row[idx]).length)
        );
        colWidths.push({ wch: width + 2 });
      });
      ws['!cols'] = colWidths;

     
      const range = XLSX.utils.decode_range(ws['!ref']);
      for (let R = range.s.r; R <= range.e.r; R++) {
        for (let C = range.s.c; C <= range.e.c; C++) {
          const cell_address = { c: C, r: R };
          const cell_ref = XLSX.utils.encode_cell(cell_address);

          if (!ws[cell_ref]) continue;

          if (R === 0) {
            
            ws[cell_ref].s = titleStyle;
          } else if (R === 2) {
           
            ws[cell_ref].s = headerStyle;
          } else if (R > 2) {
            
            ws[cell_ref].s = dataStyle;
         
            const cellValue = ws[cell_ref].v;
            if (!isNaN(cellValue) && cellValue !== '') {
              ws[cell_ref].z = cellValue % 1 === 0 ? '#,##0' : '#,##0.00';
            }
          }
        }
      }

      XLSX.utils.book_append_sheet(wb, ws, `${selectedReportType} Sales`);

 
      XLSX.writeFile(wb, `${selectedReportType}-sales-report.xlsx`);
    }

 
    document.querySelector('.btn-success').onclick = exportToExcel;

    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
    <script src="https://cdn.sheetjs.com/xlsx-0.19.3/package/dist/xlsx.full.min.js"></script>
    </main>
  </div>
</div>

<%- include('../partials/admin/footer') %>
