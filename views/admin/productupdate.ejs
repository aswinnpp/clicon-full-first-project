<%- include('../partials/admin/header') %>


<main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
  <nav class="navbar navbar-expand-md navbar-dark bg-dark mb-4 d-md-none">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Update Product</a>
      <button class="navbar-toggler custom-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#sidebar" aria-controls="sidebar" aria-expanded="false" aria-label="Toggle navigation" id="menuBtn">
        <span class="navbar-toggler-icon"></span>
      </button>
    </div>
  </nav>
  
  <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Update Product</h1>
  </div>

  <form action="/admin/productupdate" method="POST" id="productForm" enctype="multipart/form-data">

    <input type="hidden" name="id" value="<%=products._id %>">
    
    <div class="mb-3">
      <label for="productName" class="form-label">Product Name</label>
      <input type="text" class="form-control" id="productname" name="productname" value="<%=products.productname%>" required>
    </div>

    <div class="mb-3">
      <label for="description" class="form-label">Description</label>
      <input type="text" class="form-control" id="description" name="description"  value="<%=products.description%>"  required>
    </div>

   
    <div class="mb-3">
      <label for="categoryStatus" class="form-label">Category</label>
      <select class="form-control" id="categoryStatus" name="category" required onchange="handleCategoryChange()">
        <option value="">Select Category</option>
        <% categories.forEach(category => { %>
          <option value="<%= category.name%>"><%= category.name %></option>
        <% }) %>
       
      </select>
    </div>

   
    <div class="mb-3">
      <label for="brand" class="form-label">Brand</label>     
      <input type="text" class="form-control" id="brand" name="brand"  value="<%=products.brand%>"  required>
    </div>
   
    <div class="mb-3">
      <label for="stock" class="form-label">Stock</label>     
      <input type="number" class="form-control" id="stock" name="stock"  value="<%=products.stock%>"  required>
    </div>

    
    <div class="mb-3">
      <label for="warranty" class="form-label">Warranty</label>     
      <input type="text" class="form-control" id="warranty" name="warranty"  value="<%=products.warranty%>"  required>
    </div>

    
    <div class="mb-3">
      <label for="color" class="form-label">Color</label>     
      <input type="text" class="form-control" id="color" name="color"  value="<%=products.color%>"  required>
    </div>

    <div class="mb-3" id="ramField"  style="display: none;">
      <label for="ram" class="form-label">RAM</label>
      <input type="text" class="form-control" id="ram" name="ram" placeholder="Enter RAM size" >
    </div>
    
    <div class="mb-3" id="storageField"  style="display: none;">
      <label for="storage" class="form-label">Storage</label>
      <input type="text" class="form-control" id="storage" name="storage" placeholder="Enter Storage size">
    </div>

  
    <div class="mb-3">
      <label for="price" class="form-label">Price</label>
      <input type="number" class="form-control" id="price" name="price"  value="<%=products.price%>"  required min="0">
    </div>
  
    
    <div class="mb-3">
      <label for="rating" class="form-label">Rating</label>
      <input type="number" class="form-control" id="rating" name="rating"  value="<%=products.rating%>"  min="0" max="5" step="0.1">
    </div>


    <div class="mb-3">
      <label for="productImages" class="form-label">Upload Images</label>
      <div class="row" id="imageUploadCards">
        <div class="col-md-4 mb-3">
          <div class="image-card">
            <img src="https://via.placeholder.com/150" alt="Placeholder Image" id="imagePreview1">
            <input type="file" name="images" accept="image/*" required multiple onchange="handleImageUpload(event, 'imagePreview1')">
          </div>
        </div>
        <div class="col-md-4 mb-3">
          <div class="image-card">
            <img src="https://via.placeholder.com/150" alt="Placeholder Image" id="imagePreview2">
            <input type="file" name="images" accept="image/*" required multiple onchange="handleImageUpload(event, 'imagePreview2')">
          </div>
        </div>
        <div class="col-md-4 mb-3">
          <div class="image-card">
            <img src="https://via.placeholder.com/150" alt="Placeholder Image" id="imagePreview3">
            <input type="file" name="images" accept="image/*" required multiple onchange="handleImageUpload(event, 'imagePreview3')">
         </div>
         </div>
         <div class="col-md-4 mb-3">
          <div class="image-card">
            <img src="https://via.placeholder.com/150" alt="Placeholder Image" id="imagePreview3" required>
            <input type="file" name="images" accept="image/*" required multiple onchange="handleImageUpload(event, 'imagePreview3')">
         </div>
         </div>
      </div>
    </div>
    
    <!-- Cropping Modal -->
    <div id="cropModal" class="modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Crop Image</h2>
        <div class="crop-container">
          <img id="imageToCrop" src="" alt="Image to crop">
        </div>
        <button class="crop-button" onclick="cropImage()">Crop</button>
      </div>
    </div>
    
    <small class="form-text text-muted">You must upload exactly 3 images.</small>
    <div class="text-danger" id="errorImages"></div>

    <button type="submit" onclick="form.submit();" class="btn btn-primary" >Update</button>

  </form>
</main>


<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script> 
<script src="https://unpkg.com/cropperjs/dist/cropper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> 

<style>
  

.input-small {
    max-width: 150px;
}

.image-card {
    position: relative;
    border: 1px solid #ddd;
    padding: 10px;
    border-radius: 5px;
    text-align: center;
    cursor: pointer;
}

.image-card input[type="file"] {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;
}

.image-card img {
    max-width: 100%;
    max-height: 100px;
}


.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgb(0,0,0);
    background-color: rgba(0,0,0,0.4);
    padding-top: 60px;
}


.modal-content {
    background-color: #fefefe;
    margin: 5% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 60%;
    max-width: 800px;
    position: relative;
}


.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

.crop-container {
    max-height: 400px;
    overflow: hidden;
}

#imageToCrop {
    width: 100%;
    max-height: 400px;
    object-fit: contain;
}

.crop-button {
    display: block;
    margin: 20px auto 0;
    padding: 10px 20px;
    background-color: #007bff;
    color: white;
    border: none;
    cursor: pointer;
    border-radius: 5px;
}

.crop-button:hover {
    background-color: #0056b3;
}
</style>


<script>

document.addEventListener('DOMContentLoaded', (event) => {
    const form = document.getElementById('productForm');
       


form.addEventListener('submit', async (event) => {
   event.preventDefault();
   const formData = new FormData(form);
   const files = formData.getAll('images');
   const maxSize = 5 * 1024 * 1024; 

   for (const file of files) {
       if (file.size > maxSize) {
           Swal.fire({
               icon: 'error',
               title: 'Image Size Error',
               text: 'Each image must be less than 5MB.',
           });
           return;
       }
   }
});

});


  let cropper;
  let currentImageId = '';
  
  function handleImageUpload(event, imagePreviewId) {
    const file = event.target.files[0];
    const reader = new FileReader();
    
    reader.onload = function(e) {
      document.getElementById(imagePreviewId).src = e.target.result;
  
      document.getElementById('cropModal').style.display = 'block';
      currentImageId = imagePreviewId;
  
      const imageElement = document.getElementById('imageToCrop');
      imageElement.src = e.target.result;
  
      if (cropper) {
        cropper.destroy();
      }
      cropper = new Cropper(imageElement, {
        aspectRatio: NaN,
        viewMode: 1,
        autoCropArea: 1,
      });
    };
    reader.readAsDataURL(file);
  }
  
  function cropImage() {
    const canvas = cropper.getCroppedCanvas();
    const croppedImageUrl = canvas.toDataURL(); // base64 image
  
    document.getElementById(currentImageId).src = croppedImageUrl;
    document.getElementById('cropModal').style.display = 'none';
  
    
    const inputField = document.createElement('input');
    inputField.type = 'hidden';
    inputField.name = 'images';
    inputField.value = croppedImageUrl; 
  
    
  }
  
 
  document.querySelector('.close').addEventListener('click', function() {
    document.getElementById('cropModal').style.display = 'none';
    if (cropper) {
      cropper.destroy();
    }
  });

  function handleCategoryChange() {
  const category = document.getElementById('categoryStatus').value;
  const ramField = document.getElementById('ramField');
  const storageField = document.getElementById('storageField');

  
  if (category === 'Mobile' || category === 'Computers') {
    ramField.style.display = 'block';       
    storageField.style.display = 'block';  
  } else {
    ramField.style.display = 'none';       
    storageField.style.display = 'none';  
  }
}
document.getElementById('productForm').addEventListener('submit', function (event) {
    let isValid = true;

    
    const productName = document.getElementById('productname');
    if (productName.value.trim() === '') {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Product Name is required',
      });
      isValid = false;
    }

   
    const description = document.getElementById('description');
    if (description.value.trim() === '') {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Description is required',
      });
      isValid = false;
    }

 
    const category = document.getElementById('categoryStatus');
    if (category.value === '') {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Category is required',
      });
      isValid = false;
    }

    const brand = document.getElementById('brand');
    if (brand.value.trim() === '') {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Brand is required',
      });
      isValid = false;
    }

   
    const stock = document.getElementById('stock');
    if (stock.value === '' || stock.value <= 0) {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Stock must be a positive number',
      });
      isValid = false;
    }


    const warranty = document.getElementById('warranty');
    if (warranty.value.trim() === '') {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Warranty is required',
      });
      isValid = false;
    }


    const color = document.getElementById('color');
    if (color.value.trim() === '') {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Color is required',
      });
      isValid = false;
    }

  
    const price = document.getElementById('price');
    if (price.value === '' || price.value <= 0) {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Price must be a positive number',
      });
      isValid = false;
    }

  
    const rating = document.getElementById('rating');
    if (rating.value < 0 || rating.value > 5) {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Rating must be between 0 and 5',
      });
      isValid = false;
    }

    const imageInputs = document.querySelectorAll('input[type="file"]');
    let imageCount = 0;
    imageInputs.forEach(input => {
      if (input.files.length > 0) {
        imageCount++;
      }
    });

    if (imageCount !== 3) {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'You must upload exactly 3 images',
      });
      isValid = false;
    }

    
    const selectedCategory = category.value;
    const ram = document.getElementById('ram');
    const storage = document.getElementById('storage');

    if ((selectedCategory === 'Mobile' || selectedCategory === 'Computers')) {
      if (ram.value.trim() === '') {
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: 'RAM is required for selected category',
        });
        isValid = false;
      }
      if (storage.value.trim() === '') {
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: 'Storage is required for selected category',
        });
        isValid = false;
      }
    }

   
    if (!isValid) {
      event.preventDefault();
    }
  });
  </script>

 <%- include('../partials/admin/footer') %>
