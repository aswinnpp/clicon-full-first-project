<%- include('../partials/admin/header') %>


<main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
  <nav class="navbar navbar-expand-md navbar-dark bg-dark mb-4 d-md-none">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Create Product</a>
      <button class="navbar-toggler custom-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#sidebar" aria-controls="sidebar" aria-expanded="false" aria-label="Toggle navigation" id="menuBtn">
        <span class="navbar-toggler-icon"></span>
      </button>
    </div>
  </nav>
  
  <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Create Product</h1>
  </div>
  <p id="ttt" style="color: red;"></p>
  <form action="/admin/productcreate" method="POST" id="productForm" enctype="multipart/form-data">
    
    <div class="mb-3">
      
      <label for="productName" class="form-label">Product Name</label>
      <input type="text" class="form-control" id="productname" name="productname" value="" required>
    </div>

    <div class="mb-3">
      <label for="description" class="form-label">Description</label>
      <input type="text" class="form-control" id="description" name="description" value="" required>
    </div>

    <div class="mb-3">
      <label for="categoryStatus" class="form-label">Category</label>
      <select class="form-control" id="categoryStatus" name="category" required onchange="handleCategoryChange()">
        <option value="">Select Category</option>
        <% categories.forEach(category => { %>
          <option value="<%= category.name%>"><%= category?.name %></option>
        <% }) %>
       
      </select>
    </div>


       
    <div class="mb-3" id="ramField" style="display: none;">
      <label for="ram" class="form-label">RAM</label>
      <input type="text" class="form-control" id="ram" name="ram" placeholder="Enter RAM size">
    </div>
    
      <div class="mb-3" id="storageField" style="display: none;">
        <label for="storage" class="form-label">Storage</label>
        <input type="text" class="form-control" id="storage" name="storage" placeholder="Enter Storage size">
      </div>

       
    <!-- <div class="mb-3">
      <label for="brand" class="form-label">Brand</label>     
      <input type="text" class="form-control" id="brand" name="brand" value="" required>
    </div> -->

    <div class="mb-3">
      <label for="brand" class="form-label">Offer</label>     
      <input type="text" class="form-control" id="offer" name="offer" value="" required>
    </div>
   
    <div class="mb-3">
      <label for="stock" class="form-label">Stock</label>     
      <input type="number" class="form-control" id="stock" name="stock" value="" required>
    </div>

    
    <div class="mb-3">
      <label for="warranty" class="form-label">Warranty</label>     
      <input type="text" class="form-control" id="warranty" name="warranty" value="" required>
    </div>

    
    <div class="mb-3">
      <label for="color" class="form-label">Color</label>     
      <input type="text" class="form-control" id="color" name="color" value="" required>
    </div>


    <div class="mb-3" id="ramField"  style="display: none;">
      <label for="ram" class="form-label">RAM</label>
      <input type="text" class="form-control" id="ram" name="ram" placeholder="Enter RAM size" >
    </div>
    
 

  
    <div class="mb-3">
      <label for="price" class="form-label">Price</label>
      <input type="text" class="form-control" id="price" name="price" value="" required min="0">
    </div>
  
    
    <div class="mb-3">
      <label for="rating" class="form-label">Rating</label>
      <input type="number" class="form-control" id="rating" required name="rating" value="" min="0" max="5" step="0.1">
    </div>


    <div class="mb-3">
      <label for="productImages" class="form-label">Upload Images</label>
      <div class="row" id="imageUploadCards">
        <div class="col-md-4 mb-3">
          <div class="image-card">
            <img src="https://via.placeholder.com/150" alt="Placeholder Image" id="imagePreview1" >
            <input type="file" name="images" accept="image/*" required  onchange="handleImageUpload(event, 'imagePreview1')">
          </div>
        </div>
        <div class="col-md-4 mb-3">
          <div class="image-card">
            <img src="https://via.placeholder.com/150" alt="Placeholder Image" id="imagePreview2" >
            <input type="file" name="images" accept="image/*" required  onchange="handleImageUpload(event, 'imagePreview2')">
          </div>
        </div>
        <div class="col-md-4 mb-3">
          <div class="image-card">
            <img src="https://via.placeholder.com/150" alt="Placeholder Image" id="imagePreview3" >
            <input type="file" name="images" accept="image/*" required  onchange="handleImageUpload(event, 'imagePreview3')">
         </div>
         </div>
         
         <div class="col-md-4 mb-3">
          <div class="image-card">
            <img src="https://via.placeholder.com/150" alt="Placeholder Image" id="imagePreview4" >
            <input type="file" name="images" accept="image/*" required  onchange="handleImageUpload(event, 'imagePreview4')">
         </div>
         </div>


      </div>
    </div>
    
    
    <div id="cropModal" class="modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Crop Image</h2>
        <div class="crop-container">
          <img id="imageToCrop" src="" alt="Image to crop">
        </div>
        <button class="crop-button" onclick="cropImage()">Crop</button>
      </div>
    </div>
    
    <small class="form-text text-muted">You must upload exactly 4 images.</small>
    <div class="text-danger" id="errorImages"></div>

    <button type="submit" id="sub" class="btn btn-primary" >Create</button>

  </form>

</main>


<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script> 
<script src="https://unpkg.com/cropperjs/dist/cropper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> 

<style>
  

.input-small {
    max-width: 150px;
}

.image-card {
    position: relative;
    border: 1px solid #ddd;
    padding: 10px;
    border-radius: 5px;
    text-align: center;
    cursor: pointer;
}

.image-card input[type="file"] {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;
}

.image-card img {
    max-width: 100%;
    max-height: 100px;
}


.modal {
    display: none;    
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgb(0,0,0);
    background-color: rgba(0,0,0,0.4);
    padding-top: 60px;
}


.modal-content {
    background-color: #fefefe;
    margin: 5% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 60%;
    max-width: 800px;
    position: relative;
}


.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

.crop-container {
    max-height: 400px;
    overflow: hidden;
}

#imageToCrop {
    width: 100%;
    max-height: 400px;
    object-fit: contain;
}

.crop-button {
    display: block;
    margin: 20px auto 0;
    padding: 10px 20px;
    background-color: #007bff;
    color: white;
    border: none;
    cursor: pointer;
    border-radius: 5px;
}

.crop-button:hover {
    background-color: #0056b3;
}
</style>


<script>

document.addEventListener('DOMContentLoaded', (event) => {
    const form = document.getElementById('productForm');
    const button = document.getElementById('sub');
    
  
    if (!form) {
        console.error("Form element not found.");
        return;
    }

    
    form.addEventListener('submit', (event) => {
        event.preventDefault(); 
        console.log('Default form submission blocked.');
    });



    button.addEventListener("click", async (event) => {
        
            

          const errorMsg = document.getElementById('ttt');
          errorMsg.innerHTML = ''

       const name = document.getElementById('productname').value;
          if (name === "") {
      errorMsg.innerHTML = "Product name is required.";
      return; 
    }
    

    const description = document.getElementById('description').value;
    if (description === '') {
      errorMsg.innerHTML = "Description  is required";
      return; 
    }

    // const brand = document.getElementById('brand').value;
    // if (brand === '') {
    //   errorMsg.innerHTML = "brand  is required";
    //   return; 
    // }

    const offer = document.getElementById('offer').value;
    if (offer === '') {
      errorMsg.innerHTML = "offer  is required";
      return; 
    }

    const stock = document.getElementById('stock').value;
    if (stock === '') {
      errorMsg.innerHTML = "stock  is required";
      return; 
    }

    const warranty = document.getElementById('warranty').value;
    if (warranty === '') {
      errorMsg.innerHTML = "warranty  is required";
      return; 
    }

    const color = document.getElementById('color').value;
    if (color === '') {
      errorMsg.innerHTML = "color  is required";
      return; 
    }

    
    // const ram = document.getElementById('ram').value;
    // if (ram === '') {
    //   errorMsg.innerHTML = "Ram  is required";
    //   return; 
    // }

    // const storage = document.getElementById('storage').value;
    // if (storage === '') {
    //   errorMsg.innerHTML = "Storage  is required";
    //   return; 
    // }
   





    const price = document.getElementById('price').value;
    if (price <= 0) {
      errorMsg.innerHTML = "Price must be a positive number.";
      return; 
    }

    
    const rating = document.getElementById('rating').value;
    if (rating < 0 || rating > 5) {
      errorMsg.innerHTML = "Rating must be between 0 and 5.";
      return; 
    }

    
    const imageInputs = document.querySelectorAll('input[type="file"][name="images"]');
    const imageFiles = Array.from(imageInputs).filter(input => input.files.length > 0);
    if (imageFiles.length !== 4) {
      errorMsg.innerHTML = "You must upload exactly 4 images.";
      return; 
    }


            if (typeof form.submit === 'function') {
                form.submit(); 
            } else {
                console.error('form.submit is not a function.');
            }
    
    });
});



let cropper;
let currentImageId = '';

function handleImageUpload(event, imagePreviewId) {
  const file = event.target.files[0];
  if (!file) return;

  const reader = new FileReader();
  reader.onload = function (e) {
    const imagePreview = document.getElementById(imagePreviewId);
    imagePreview.src = e.target.result;

    const modal = document.getElementById('cropModal');
    modal.style.display = 'block';

    currentImageId = imagePreviewId;
    const imageElement = document.getElementById('imageToCrop');
    imageElement.src = e.target.result;

    if (cropper) {
      cropper.destroy();
    }
    cropper = new Cropper(imageElement, {
      aspectRatio: NaN, // Free cropping
      viewMode: 1,
      autoCropArea: 1,
    });
  };

  reader.readAsDataURL(file);
}

function cropImage() {
  if (!cropper) return;

  const canvas = cropper.getCroppedCanvas();
  if (!canvas) {
    alert('Failed to crop image.');
    return;
  }

  const croppedImageUrl = canvas.toDataURL();

  const imagePreview = document.getElementById(currentImageId);
  imagePreview.src = croppedImageUrl;

  const inputField = document.querySelector(`input[name="${currentImageId}_cropped"]`);
  if (inputField) {
    inputField.value = croppedImageUrl;
  } else {
    const hiddenInput = document.createElement('input');
    hiddenInput.type = 'hidden';
    hiddenInput.name = `${currentImageId}_cropped`;
    hiddenInput.value = croppedImageUrl;

    const form = document.getElementById('productForm');
    form.appendChild(hiddenInput);
  }

  closeModal();
}

function closeModal() {
  const modal = document.getElementById('cropModal');
  modal.style.display = 'none';
  if (cropper) {
    cropper.destroy();
    cropper = null;
  }
}

function submitForm(event) {
  event.preventDefault();

  const hiddenInputs = document.querySelectorAll('input[type="hidden"]');
  
  
  if (hiddenInputs.length < 4) {
    document.getElementById('errorImages').textContent = 'Please upload and crop exactly 4 images.';
    return;
  }

  
  const formData = new FormData(document.getElementById('productForm'));
  console.log("Submitting form with data: ", formData); 

 
  // fetch('/path-to-your-endpoint', {
  //   method: 'POST',
  //   body: formData
  // }).then(response => response.json())
  //   .then(data => {
  //     console.log('Form submitted successfully:', data);
     
  //   })
  //   .catch(error => {
  //     console.error('Error submitting form:', error);
      
  //   });
}

  function handleCategoryChange() {
  const category = document.getElementById('categoryStatus').value;
  const ramField = document.getElementById('ramField');
  const storageField = document.getElementById('storageField');

  
  if (category === 'Mobiles' || category === 'Computers'||category === 'Mobile' || category === 'Computer') {
    ramField.style.display = 'block';       
    storageField.style.display = 'block';  
  } else {
    ramField.style.display = 'none';       
    storageField.style.display = 'none';  
  }
}



  
  </script>

 <%- include('../partials/admin/footer') %>
