<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Clicon Store</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css"
    />
    <link rel="stylesheet" href="/css/styles/userhome.css" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"
    />
  </head>
  <body>

    <style>
      body {
        margin: 0;
        padding: 0;
        background: linear-gradient(135deg, #6e8efb, #a777e3);
        background-size: cover;     
        background-position: center; 
        background-repeat: no-repeat; 
        height: 100vh;  
        overflow: hidden; 
               
      }
    </style>
    

<div class="container3 " style="margin-top: 200px;">
  <div class="auth-wrapper">
    <ul class="nav nav-tabs mb-3" id="auth-tab" role="tablist">
      <li class="nav-item" role="presentation">
        <form action="./signup">
          <button
            class="nav-link active"
            id="sign-up-tab"
            data-bs-toggle="tab"
            data-bs-target=""
            type="submit"
            role="tab"
            aria-controls="sign-up"
            aria-selected="true"
          >
            Sign up
          </button>
        </form>
      </li>
      <li class="nav-item" role="presentation">
        <form action="./signin" method="get">
          <button
            class="nav-link"
            id="sign-in-tab"
            type="submit"
            role="tab"
            aria-controls="sign-in"
            aria-selected="false"
          >
            Sign in
          </button>
        </form>
      </li>
    </ul>
    <div class="tab-content" id="auth-tabContent">
      <!-- Sign Up Form -->
      <div
        class="tab-pane fade show active"
        id="sign-up"
        role="tabpanel"
        aria-labelledby="sign-up-tab"
      >
        <p id="errr" style="color: red">
          <%= typeof message !== 'undefined' ? message : '' %>
        </p>
        <p  style="color: red"  id="error"></p>
        <form id="sign-up-form" action="/signup" method="post">
          <div class="mb-3">
            <label for="sign-up-name" class="form-label">Name</label>
            <input
              type="text"
              name="name"
              class="form-control"
              id="sign-up-name"
              placeholder="Enter your name"
            />
          </div>
          <div class="mb-3">
            <label for="sign-up-email" class="form-label">Email address</label>
            <input
              type="email"
              name="email"
              class="form-control"
              id="sign-up-email"
              placeholder="Enter your email"
            />
          </div>

          <div class="mb-3">
            <label for="sign-up-password" class="form-label">Password</label>
            <div class="input-group">
              <input
                type="password"
                class="form-control"
                id="sign-up-password"
                placeholder="Enter your password"
                name="password"
              />
              <button type="button" id="togglePassword" style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); background: transparent; border: none; font-size: 18px; cursor: pointer;">
                üëÅÔ∏è
              </button>
            </div>
          </div>

          <div class="mb-3">
            <label for="sign-up-confirm-password" class="form-label"
              >Confirm Password</label
            >

            <input
              type="password"
              name="Confirmpassword"
              class="form-control"
              id="sign-up-confirm-password"
              placeholder="Confirm your password"
            />
          </div>

          <button type="submit" class="btn btn-primary">Sign Up</button>
        </form>
        <div class="container">
          <button
            class="google-btn d-flex align-items-center justify-content-center mt-3 ms-3"
          >
        
            <span class="text-secondary" id="google-signup-button"
              >Sign in with Google</span
            >
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>



const togglePasswordBtn = document.getElementById('togglePassword');
  const passwordInput = document.getElementById('sign-up-password');

  togglePasswordBtn.addEventListener('click', function() {
    
    if (passwordInput.type === 'password') {
      passwordInput.type = 'text'; 
      togglePasswordBtn.textContent = 'üôà'; 
    } else {
      passwordInput.type = 'password';  
      togglePasswordBtn.textContent = 'üëÅÔ∏è';  
    }
  });

  passwordInput.addEventListener('input', function() {

    togglePasswordBtn.disabled = false;
  });
 



  document.addEventListener("DOMContentLoaded", () => {
    const signUpForm = document.querySelector("#sign-up-form"); 
    signUpForm.addEventListener("submit", (event) => {
      event.preventDefault(); 

    
      const name = document.getElementById("sign-up-name").value.trim();
      const email = document.getElementById("sign-up-email").value.trim();
      const password = document.getElementById("sign-up-password").value.trim();
      const confirmPassword = document
        .getElementById("sign-up-confirm-password")
        .value.trim();

      const errorMsg = document.getElementById("error");

      if (name === "") {
        errorMsg.innerHTML="Name is required."
      
        return;
      }

      if (email === "") {
        errorMsg.innerHTML="Email is required."
        return;
      } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
        errorMsg.innerHTML="Invalid email address."       
        return;
      }

      if (
        password === "" ||
        password.length < 6 ||
        !/(?=.*[a-z])/.test(password) ||
        !/(?=.*[A-Z])/.test(password) ||
        !/(?=.*[0-9])/.test(password) ||
        !/(?=.*[!@#$%^&*()_+\-=[\]{};':\"\\|,.<>\/?])/.test(password)
      ) {
        errorMsg.innerHTML= `Password must contain:<br> 
            -  at least 6 characters long<br>
            - one lowercase letter<br>
            - one uppercase letter<br>
            - one number<br>
            - one special character`
        
        return;
      }

      if (confirmPassword === "") {
        
        errorMsg.innerHTML="Confirm password is required." 

        return;
      } else if (password !== confirmPassword) {
        errorMsg.innerHTML="Passwords do not match." 
        return;
      }

      signUpForm.submit();
    });
  });



  let action = "signup";

  window.onload = function () {
    if (action === "signup") {
      google.accounts.id.initialize({
        client_id: "<%= typeof cliend_id !== 'undefined' ? cliend_id : '' %>",
        callback: handleCredentialResponsesingup,
      });
    }

    google.accounts.id.renderButton(
      document.getElementById("google-signup-button"),
      { theme: "outline", size: "large" }
    );
  };

  function handleCredentialResponsesingup(response) {
    console.log("ggggggggggggggg");

    const id_token = response.credential;

    console.log("ID Token: ", id_token);

    const decoded = jwt_decode(id_token);
    console.log("User Profile: ", decoded);
    const data = { name: decoded.name, email: decoded.email, imageUrl: decoded.picture  };

    fetch("/authsignup", {
      method: "POST",
      body: JSON.stringify({ data }),
      headers: { "Content-Type": "application/json" },
    })
      .then((data) => {
        console.log(data);

        if (data.redirected) {
          console.log("hhhhhhhhhhh");

          window.location = data.url;
        } else {
          document.getElementById("errr").innerHTML = "useralready exist";
        }
      })
      .catch((error) => {
        console.error("Error:", error);
      });
  }
</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>

<script src="https://accounts.google.com/gsi/client" async defer></script>




<script src="https://cdn.jsdelivr.net/npm/jwt-decode@3.1.2/build/jwt-decode.min.js"></script>
</footer>
</body>
</html>
